;
; Convert the input file to the specified data format.
;
; Parameters:
;   inputfile          : Input file
;
; Keywords:
;   outputfile         : Output file
;   samples            : Samples of the input file.
;   lines              : Lines of the input file.
;   input_format       : Format of the input data.
;                        Supported formats are: int, long, float, double, scomplex, fcomplex
;   output_format      : Format of the output data.
;                        Supported formats are: int, long, float, double, scomplex, fcomplex
;   stretch_data       : Stretch data or not. When the outputformat is int, the data are always need stretch.
;
; Written by:
;   T.LI @ SASMAC, 20140728
;
PRO TLI_CONVERT_FORMAT, inputfile, outputfile=outputfile, samples=samples, lines=lines, input_format=input_format, output_format=output_format, stretch_data=stretch_data

  IF NOT KEYWORD_SET(outputfile) THEN outputfile=inputfile+'_convert'
  
  IF NOT KEYWORD_SET(samples) AND NOT KEYWORD_SET(lines) THEN Message, 'Error! Please specify either samples or lines.'
  
  IF NOT KEYWORD_SET(input_format) THEN Message, 'Error! Please specify data format for the input file.'
  
  IF NOT KEYWORD_SET(output_format) THEN output_format=input_format
  
  block_lines=100D  ; No of lines to load data.
  
  block_no=CEIL(samples/block_lines)
  
  input_format=STRLOWCASE(input_format)
  
  OPENR, lun, inputfile,/GET_LUN
  OPENW, outputlun, outputfile,/GET_LUN
  
  FOR i=0, block_no-1 DO BEGIN
  
    start_line=block_lines*i
    
    end_line=(block_lines*(i+1)-1)<(lines-1)
    
    block_lines_i=end_line-start_line+1
    
    Case input_format OF
      'int': BEGIN
        block_data=INTARR(samples, block_lines_i)
      END
      
      'long': BEGIN
        block_data=LONARR(samples, block_lines_i)
      END
      
      'float': BEGIN
        block_data=FLTARR(samples, block_lines_i)
      END
      
      'double': BEGIN
        block_data=DBLARR(samples, block_lines_i)
      END
      
      'scomplex': BEGIN
        block_data=INTARR(samples*2, block_lines_i)
      END
      
      'fcomplex': BEGIN
        block_data=FLTARR(samples*2, block_lines_i)
      END
      
    ENDCASE
    
    READU, lun, block_data
    
    Case output_format OF
      'int': BEGIN
        IF KEYWORD_SET(stretch_data) THEN BEGIN
          block_data=TLI_STRETCH_DATA(block_data, outrange=[0, 255])
        ENDIF ELSE BEGIN
          block_data=BYTE(block_data)        
        ENDELSE
      END
      
      'long': BEGIN
        block_data=LONG(block_data)
      END
      
      'float': BEGIN
        block_data=FLOAT(block_data)
      END
      
      'double': BEGIN
        block_data=DOUBLE(block_data)
      END
      
      'scomplex': BEGIN
        IF input_format NE 'scomplex' AND input_format NE 'fcomplex'THEN BEGIN
          temp=block_data
          block_data=INTARR(samples*2, block_lines_i)
          block_data[0:*:2]=temp
        ENDIF ELSE BEGIN
          IF input_format EQ 'fcomplex' THEN BEGIN
            block_data=BYTE(block_data)
          ENDIF
        ENDELSE
      END
      
      'fcomplex': BEGIN
        IF input_format NE 'scomplex' AND input_format NE 'fcomplex' THEN BEGIN
          temp=block_data
          block_data=FLTARR(samples*2, block_lines_i)
          block_data[0:*:2]=temp
        ENDIF ELSE BEGIN
          IF input_format EQ 'scomplex' THEN BEGIN
            block_data=FLOAT(block_data)          
          ENDIF        
        ENDELSE
        
      END
      
    ENDCASE
    
    
    WRITEU, output_lun, block_data
  ENDFOR
  
  
  
  
END